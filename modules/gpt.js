const gpt4all = require("gpt4all");
const path = require("path");
const os = require("os");

class GPTModelManager {
    constructor(modelName = "Nous-Hermes-2-Mistral-7B-DPO.Q4_0.gguf") {
        this.modelName = modelName;
        this.model = null;
        this.modelDir = path.join(os.homedir(), ".cache", "gpt4all");
    }

    async init() {
        try {
            console.log("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è GPT4All –º–æ–¥–µ–ª–∏...");
            this.model = await gpt4all.loadModel(this.modelName);
            console.log("‚úÖ –ú–æ–¥–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
            return this;
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –º–æ–¥–µ–ª–∏:", error);
            return null;
        }
    }

    async generate(prompt, options = {}) {
        if (!this.model) {
            console.error("‚ùå –ú–æ–¥–µ–ª—å –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞");
            return null;
        }

        try {
            const result = await this.model.generate(prompt, options);
            return result.text;
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:", error);
            return null;
        }
    }
}

module.exports = new GPTModelManager();
