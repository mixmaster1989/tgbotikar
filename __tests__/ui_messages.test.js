const ui = require("../modules/ui_messages");

describe("UI messages module", () => {
  it("should return static messages", () => {
    expect(ui.processingFile).toMatch(/–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ñ–∞–π–ª/);
    expect(ui.promptSent).toMatch(/–û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–æ–º–ø—Ç–∞/);
    expect(ui.modelAnswerReceived).toMatch(/–û—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω/);
    expect(ui.savingToCache).toMatch(/–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç/);
    expect(ui.cacheSynced).toMatch(/–ö—ç—à —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω/);
    expect(ui.searchingLocalCache).toMatch(/–ò—â–µ–º –ø–æ—Ö–æ–∂–∏–π –≤–æ–ø—Ä–æ—Å/);
    expect(ui.answerFromCache).toMatch(/–û—Ç–≤–µ—Ç –Ω–∞–π–¥–µ–Ω –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º –∫—ç—à–µ/);
    expect(ui.answerFromYadisk).toMatch(/–û—Ç–≤–µ—Ç –Ω–∞–π–¥–µ–Ω –≤ –∫—ç—à–µ –Ω–∞ –Ø–Ω–¥–µ–∫—Å/);
    expect(ui.generatingAI).toMatch(/–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç/);
    expect(ui.answerSaved).toMatch(/–û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω –∏ —Å–æ—Ö—Ä–∞–Ω—ë–Ω/);
  });

  it("should return dynamic messages", () => {
    expect(ui.generatingPrompt(2, 5)).toBe("ü§ñ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è —á–∞—Å—Ç–∏ 2 –∏–∑ 5...");
    expect(ui.error("–û—à–∏–±–∫–∞")).toBe("‚ùå –û—à–∏–±–∫–∞: –û—à–∏–±–∫–∞");
  });
});